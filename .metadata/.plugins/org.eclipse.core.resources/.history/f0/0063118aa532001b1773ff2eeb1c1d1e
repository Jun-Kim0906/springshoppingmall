package com.mycrud.crud.dao;

import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.tree.RowMapper;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.mycrud.crud.board.BoardVO;

@Repository
public class BoardDAO {

@Autowired
JdbcTemplate jdbcTemplate;

	public int insertBoard(BoardVO vo) {
		String sql = "insert into BOARD (title, writer, content, category) values ("
					+"'"+ vo.getTitle()+"',"
					+"'"+ vo.getWriter()+"',"
					+"'"+ vo.getContent()+"',"
					+"'"+ vo.getCategory()+"')";
		
		return jdbcTemplate.update(sql);
	}

	// 글 삭제
	public void deleteBoard(int seq) {
	String sql = "delete from BOARD where seq =" + seq;
	return jdbcTemplate.update(sql);
}

	public int updateBoard(BoardVO vo) {
		String sql = "update BOARD set title='" + vo.getTitle()+"',"
				+ "title='"+vo.getTitle()+"',"
				+ "writer='" +vo.getWriter()+"',"
				+ "content='" +vo.getContent()+"',"
				+ "category='" +vo.getCategory()+"'where seq=" +vo.getSeq();
		return jdbcTemplate.update(sql);
}
	
	class BoardRowMapper implements RowMapper<BoardVO>{
		@override
		public BoardVO mapRow(ResultSet rs, int rowNum) throws SQLException{
			BoardVO vo = new BoardVO();
			vo.setSeq(rs.getInt("seq"));
			vo.setTitle(rs.getString("content"));
			vo.setWriter(rs.getString("writer"));
			vo.setCategory(rs.getString("category"));
				
		}
	